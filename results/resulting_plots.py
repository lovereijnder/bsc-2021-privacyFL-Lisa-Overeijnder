import matplotlib.pyplot as plt

'''
Define the mechanism and epsilon as required. The plots created will choose the data from the chosen parameters. 
'''
MECHANISM = "Laplace"  # Choose between: Laplace, Gaussian and Staircase
EPSILON = 0.1  # Choose between: 0.1 and 1.0

if MECHANISM == "Laplace":
    if EPSILON == 0.1:
        N3_S100_CIFAR = [0.2337, 0.2219, 0.2848, 0.3015, 0.2447, 0.3168, 0.2937, 0.3014, 0.3055, 0.3265]
        N3_S200_CIFAR = [0.2669, 0.2837, 0.2911, 0.303, 0.3118, 0.3225, 0.321, 0.3206, 0.3237, 0.3216]
        N8_S100_CIFAR = [0.28, 0.2997, 0.3214000000000001, 0.32569999999999993, 0.34419999999999995,
                         0.35389999999999994, 0.3266, 0.33369999999999994, 0.3146, 0.3373]
        N8_S200_CIFAR = [0.30949999999999994, 0.3323, 0.3466, 0.3491, 0.3328, 0.3313, 0.3291, 0.3389,
                         0.33510000000000006, 0.33510000000000006]

        N3_S100_MNIST = [0.7464, 0.8184, 0.8455, 0.8628, 0.8691999999999999, 0.8653999999999998, 0.8728000000000001,
                         0.8679, 0.8677, 0.8689]
        N3_S200_MNIST = [0.8211, 0.8597, 0.8751000000000001, 0.8732000000000001, 0.868, 0.8681, 0.8659,
                         0.8652000000000001, 0.8708, 0.8691]
        N8_S100_MNIST = [0.8289, 0.8568999999999998, 0.8764000000000001, 0.8827999999999998, 0.8842, 0.8809000000000002,
                         0.8794000000000002, 0.8792999999999999, 0.875, 0.8765999999999999]
        N8_S200_MNIST = [0.8418, 0.8838999999999999, 0.8886000000000001, 0.8865999999999998, 0.8826999999999999,
                         0.8823999999999999, 0.8807, 0.8815999999999999, 0.8806000000000002, 0.8856]

    if EPSILON == 1.0:
        N3_S100_CIFAR = [0.2338, 0.2754, 0.3034, 0.2744, 0.3055, 0.3194, 0.3173, 0.2795, 0.3086, 0.2954]
        N3_S200_CIFAR = [0.267, 0.2604, 0.2583, 0.3112, 0.3081, 0.3097, 0.3076, 0.3114, 0.3183, 0.3199]
        N8_S100_CIFAR = [0.28, 0.3123, 0.3084, 0.32560000000000006, 0.28140000000000004, 0.3403999999999999,
                         0.33170000000000005, 0.3394, 0.3456000000000001, 0.33380000000000004]
        N8_S200_CIFAR = [0.30949999999999994, 0.3326, 0.3315000000000001, 0.32960000000000006, 0.3349,
                         0.33959999999999996, 0.33979999999999994, 0.3401, 0.353, 0.3527]

        N3_S100_MNIST = [0.7463000000000001, 0.8214, 0.8482, 0.8598, 0.8668999999999999, 0.8642, 0.8678, 0.8721,
                         0.8697, 0.8712]
        N3_S200_MNIST = [0.8209, 0.8648000000000001, 0.8770000000000001, 0.8744, 0.8679, 0.8675, 0.8618,
                         0.8709000000000001, 0.8674, 0.8696]
        N8_S100_MNIST = [0.8285999999999999, 0.8600000000000001, 0.8753000000000001, 0.8811, 0.8852000000000001,
                         0.8812999999999998, 0.8788999999999999, 0.8798000000000001, 0.8771000000000002, 0.8754]
        N8_S200_MNIST = [0.8417000000000001, 0.8849, 0.8886000000000001, 0.886, 0.8787000000000001, 0.8800999999999999,
                         0.8773, 0.8814000000000001, 0.8811999999999999, 0.8811999999999999]
elif MECHANISM == "Gaussian":
    if EPSILON == 0.1:
        N3_S100_CIFAR = [0.239, 0.269, 0.247, 0.273, 0.271, 0.267, 0.299, 0.31, 0.324, 0.266]
        N3_S200_CIFAR = [0.262, 0.283, 0.285, 0.314, 0.315, 0.284, 0.3459999999999999, 0.296, 0.327, 0.322]
        N8_S100_CIFAR = [0.285, 0.292, 0.305, 0.321, 0.313, 0.333, 0.328, 0.35800000000000004, 0.326, 0.339]
        N8_S200_CIFAR = [0.294, 0.332, 0.302, 0.3439999999999999, 0.349, 0.331, 0.334, 0.3439999999999999, 0.329, 0.333]
        N13_S100_CIFAR = [0.302, 0.33199999999999996, 0.31199999999999994, 0.3370000000000001, 0.34199999999999997,
                          0.34499999999999986, 0.3399999999999999, 0.33599999999999997, 0.37100000000000005, 0.343]
        N13_S200_CIFAR = [0.315, 0.36200000000000004, 0.338, 0.3479999999999999, 0.351, 0.3609999999999999, 0.359,
                          0.36299999999999993, 0.383, 0.35500000000000004]

        N3_S100_MNIST = [0.767, 0.82, 0.8329999999999999, 0.8649999999999999, 0.863, 0.864, 0.863, 0.863, 0.872,
                         0.8690000000000001]
        N3_S200_MNIST = [0.816, 0.8649999999999999, 0.871, 0.87, 0.871, 0.8729999999999999, 0.871, 0.856, 0.872, 0.871]
        N8_S100_MNIST = [0.848, 0.856, 0.8769999999999999, 0.883, 0.8819999999999999, 0.8819999999999999,
                         0.8769999999999999, 0.8789999999999998, 0.88, 0.878]
        N8_S200_MNIST = [0.838, 0.8760000000000001, 0.8760000000000001, 0.883, 0.8760000000000001, 0.8810000000000001,
                         0.8769999999999999, 0.8789999999999998, 0.88, 0.886]

        N13_S100_MNIST = [0.8490000000000001, 0.862, 0.876, 0.878, 0.8859999999999998, 0.8900000000000001,
                          0.8900000000000001, 0.8900000000000001, 0.8849999999999999, 0.8870000000000003]
        N13_S200_MNIST = [0.8309999999999996, 0.8829999999999999, 0.8819999999999998, 0.8840000000000002,
                          0.8800000000000002, 0.878, 0.8810000000000001, 0.8789999999999997, 0.8889999999999999,
                          0.8930000000000001]

    if EPSILON == 1.0:
        N3_S100_CIFAR = [0.238, 0.271, 0.255, 0.264, 0.286, 0.273, 0.263, 0.288, 0.308, 0.299]
        N3_S200_CIFAR = [0.261, 0.286, 0.269, 0.316, 0.275, 0.334, 0.308, 0.312, 0.309, 0.328]
        N8_S100_CIFAR = [0.285, 0.307, 0.314, 0.322, 0.322, 0.33, 0.318, 0.307, 0.332, 0.334]
        N8_S200_CIFAR = [0.294, 0.33999999999999997, 0.338, 0.316, 0.33999999999999997, 0.342, 0.309, 0.357, 0.353,
                         0.347]
        N13_S100_CIFAR = [0.303, 0.30799999999999994, 0.351, 0.33399999999999996, 0.36299999999999993,
                          0.32500000000000007, 0.326, 0.359, 0.366, 0.3730000000000001]
        N13_S200_CIFAR = [0.315, 0.34100000000000014, 0.33199999999999996, 0.338, 0.359, 0.37199999999999994,
                          0.3570000000000001, 0.38700000000000007, 0.35299999999999987, 0.367]

        N3_S100_MNIST = [0.767, 0.82, 0.83, 0.8649999999999999, 0.868, 0.86, 0.8690000000000001, 0.876, 0.872, 0.867]
        N3_S200_MNIST = [0.815, 0.862, 0.859, 0.875, 0.872, 0.8729999999999999, 0.867, 0.8610000000000001,
                         0.8690000000000001, 0.868]
        N8_S100_MNIST = [0.848, 0.854, 0.872, 0.8769999999999999, 0.8840000000000001, 0.883, 0.8789999999999998, 0.88,
                         0.88, 0.8810000000000001]

        N8_S200_MNIST = [0.838, 0.883, 0.88, 0.8769999999999999, 0.8760000000000001, 0.8810000000000001,
                         0.8810000000000001, 0.8810000000000001, 0.8849999999999999, 0.883]
        N13_S100_MNIST = [0.8490000000000001, 0.8640000000000002, 0.8800000000000002, 0.8840000000000002,
                          0.8870000000000003, 0.8930000000000001, 0.888, 0.8889999999999999, 0.8840000000000002,
                          0.8819999999999998]
        N13_S200_MNIST = [0.8309999999999996, 0.8810000000000001, 0.8840000000000002, 0.8859999999999998, 0.876, 0.878,
                          0.8859999999999998, 0.8770000000000001, 0.8819999999999998, 0.888]
elif MECHANISM == 'Staircase':
    if EPSILON == 0.1:
        N3_S100_CIFAR = [0.238, 0.259, 0.231, 0.267, 0.306, 0.315, 0.277, 0.279, 0.302, 0.308]
        N3_S200_CIFAR = [0.261, 0.289, 0.286, 0.299, 0.296, 0.299, 0.31, 0.288, 0.323, 0.323]
        N8_S100_CIFAR = [0.285, 0.29, 0.319, 0.32, 0.31, 0.306, 0.329, 0.333, 0.329, 0.327]
        N8_S200_CIFAR = [0.294, 0.334, 0.33, 0.333, 0.345, 0.361, 0.322, 0.334, 0.351, 0.324]
        N13_S100_CIFAR = [0.303, 0.327, 0.32100000000000006, 0.3390000000000001, 0.36299999999999993,
                          0.34199999999999997,
                          0.32399999999999995, 0.327, 0.37000000000000005, 0.352]
        N13_S200_CIFAR = [0.36399999999999993, 0.3399999999999999, 0.3490000000000001, 0.35500000000000004,
                          0.3570000000000001, 0.37000000000000005, 0.37999999999999995, 0.374, 0.35500000000000004]

        N3_S100_MNIST = [0.7680000000000001, 0.816, 0.8210000000000001, 0.864, 0.864, 0.8569999999999999, 0.876, 0.874,
                         0.866, 0.872]
        N3_S200_MNIST = [0.815, 0.8569999999999999, 0.872, 0.872, 0.875, 0.871, 0.864, 0.864, 0.868, 0.8690000000000001]
        N8_S100_MNIST = [0.848, 0.8550000000000002, 0.8730000000000001, 0.8769999999999999, 0.883, 0.878,
                         0.8789999999999998, 0.88, 0.8789999999999998, 0.8769999999999999]
        N8_S200_MNIST = [0.838, 0.88, 0.8849999999999999, 0.8789999999999998, 0.883, 0.875, 0.883, 0.8739999999999999,
                         0.8810000000000001, 0.886]
        N13_S100_MNIST = [0.8490000000000001, 0.8659999999999998, 0.8800000000000002, 0.8829999999999999,
                          0.8870000000000003, 0.894, 0.8900000000000001, 0.8930000000000001, 0.8829999999999999,
                          0.8840000000000002]
        N13_S200_MNIST = [0.8309999999999996, 0.8800000000000002, 0.888, 0.8810000000000001, 0.8810000000000001,
                          0.8810000000000001, 0.8789999999999997, 0.8810000000000001, 0.8859999999999998,
                          0.8859999999999998]
    if EPSILON == 1.0:
        N3_S100_CIFAR = [0.238, 0.279, 0.26, 0.277, 0.28, 0.301, 0.3, 0.286, 0.243, 0.293]
        N3_S200_CIFAR = [0.262, 0.28, 0.278, 0.288, 0.332, 0.319, 0.321, 0.314, 0.296, 0.323]
        N8_S100_CIFAR = [0.285, 0.318, 0.306, 0.323, 0.35000000000000003, 0.306, 0.311, 0.334, 0.325, 0.321]
        N8_S200_CIFAR = [0.294, 0.33, 0.322, 0.313, 0.33, 0.342, 0.334, 0.324, 0.332, 0.343]
        N13_S100_CIFAR = [0.303, 0.31, 0.31700000000000006, 0.343, 0.36200000000000004, 0.3469999999999999, 0.343,
                          0.3469999999999999, 0.35, 0.3399999999999999]
        N13_S200_CIFAR = [0.315, 0.34499999999999986, 0.351, 0.35299999999999987, 0.352, 0.3490000000000001,
                          0.3469999999999999, 0.36, 0.37000000000000005, 0.3370000000000001]

        N3_S100_MNIST = [0.7680000000000001, 0.8130000000000001, 0.8409999999999999, 0.867, 0.859, 0.8610000000000001,
                         0.862, 0.8649999999999999, 0.872, 0.8690000000000001]
        N3_S200_MNIST = [0.815, 0.862, 0.866, 0.872, 0.876, 0.875, 0.859, 0.864, 0.872, 0.867]
        N8_S100_MNIST = [0.848, 0.8529999999999999, 0.8760000000000001, 0.8730000000000001, 0.8810000000000001,
                         0.8769999999999999, 0.8739999999999999, 0.8810000000000001, 0.8789999999999998,
                         0.8810000000000001]
        N8_S200_MNIST = [0.838, 0.88, 0.883, 0.8819999999999999, 0.88, 0.87, 0.883, 0.878, 0.8810000000000001,
                         0.8840000000000001]
        N13_S100_MNIST = [0.8490000000000001, 0.8610000000000001, 0.8800000000000002, 0.8800000000000002,
                          0.8919999999999999, 0.891, 0.8859999999999998, 0.894, 0.8829999999999999, 0.888]
        N13_S200_MNIST = [0.8309999999999996, 0.8789999999999997, 0.891, 0.8819999999999998, 0.878, 0.8840000000000002,
                          0.8819999999999998, 0.8789999999999997, 0.8800000000000002, 0.8819999999999998]
else:
    print('ERROR')

'''
Below four graphs will be created.
Two graphs will show the accuracy versus the number of clients participated for the two dataset MNIST and Cifar-10.
And the other two graphs will show the accuracy versus the size of the dataset per client 
for the the two dataset MNIST and Cifar-10.
'''
N = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# Plot Accuracy vs. Number of Clients
fig, (ax2, ax1) = plt.subplots(1, 2, figsize=(25, 15))
fig.suptitle('Accuracy vs. Number of Clients Participating\n' +
             str(MECHANISM) + ' Mechanism with epsilon = ' + str(EPSILON), size=30)

ax1.plot(N, N3_S100_CIFAR, label="C = 3")
ax1.plot(N, N8_S100_CIFAR, label="C = 8")
ax1.set_title("CIFAR-10", size=20)
ax1.set_xlabel("Number of Iterations (N)", size=20)
ax1.set_ylabel("Accuracy (%)", size=20)
ax1.set_xlim(1, 10)
ax1.tick_params(axis='x', labelsize=15)
ax1.tick_params(axis='y', labelsize=15)
ax1.legend(loc="lower right", fontsize=20)

ax2.plot(N, N3_S100_MNIST, label="C = 3")
ax2.plot(N, N8_S100_MNIST, label="C = 8")
ax2.set_title("MNIST", size=20)
ax2.set_xlabel("Number of Iterations (N)", size=20)
ax2.set_ylabel("Accuracy (%)", size=20)
ax2.legend(loc="lower right", fontsize=20)
ax2.tick_params(axis='x', labelsize=15)
ax2.tick_params(axis='y', labelsize=15)
ax2.set_xlim(1, 10)
fig.show()

# Plot the Accuracy vs. Dataset Size per Client
fig, (ax4, ax3) = plt.subplots(1, 2, figsize=(25, 15))
fig.suptitle('Accuracy vs. Dataset Size per Client\n'
             + str(MECHANISM) + ' Mechanism with epsilon = ' + str(EPSILON), size=30)
ax3.plot(N, N3_S100_CIFAR, label="S = 100, C = 3")
ax3.plot(N, N3_S200_CIFAR, label="S = 200, C = 3")
ax3.plot(N, N8_S100_CIFAR, label="S = 100, C = 8")
ax3.plot(N, N8_S200_CIFAR, label="S = 200, C = 8")
ax3.set_title("CIFAR-10", size=20)
ax3.set_xlabel("Number of Iterations (N)", size=20)
ax3.set_ylabel("Accuracy (%)", size=20)
ax3.set_xlim(1, 10)
ax3.tick_params(axis='x', labelsize=15)
ax3.tick_params(axis='y', labelsize=15)
ax3.legend(loc="lower right", fontsize=20)

ax4.plot(N, N3_S100_MNIST, label="S = 100, C = 3")
ax4.plot(N, N3_S200_MNIST, label="S = 200, C = 3")
ax4.plot(N, N8_S100_MNIST, label="S = 100, C = 8")
ax4.plot(N, N8_S200_MNIST, label="S = 200, C = 8")
ax4.set_title("MNIST", size=20)
ax4.set_xlabel("Number of Iterations (N)", size=20)
ax4.set_ylabel("Accuracy (%)", size=20)
ax4.legend(loc="lower right", fontsize=20)
ax4.set_xlim(1, 10)
ax4.tick_params(axis='x', labelsize=15)
ax4.tick_params(axis='y', labelsize=15)
fig.show()
